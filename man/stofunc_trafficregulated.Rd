% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stofunc_trafficregulated.R
\name{stofunc_trafficregulated}
\alias{stofunc_trafficregulated}
\title{This function gives stochastic realization for n countries with a given regulated strategy}
\usage{
stofunc_trafficregulated(combinetheta, inp)
}
\arguments{
\item{combinetheta}{is a matrix of parameters, parameters of each country is on 1 row}

\item{inp}{is a list include duration : durationtravel (days),
travelregulated: a list of travel allowed from 1 country to another during the duration,
initialmatrix is a matrix of initial compartments of countries, each country is on 1 row)}
}
\value{
The average realization of n countries with travel data regulated
}
\description{
This function gives stochastic realization for n countries with a given regulated strategy
}
\examples{
\dontrun{
#Example1: Realizations of 3 countries
library(CONETTravel)
library(matrixcalc)
P1 = 10^7
I1 = 250
A1 = 130
S1 = P1 - I1 - A1
x1 = c(S1,I1,A1,0,0,0) # State corresponding S,I,A,R,D,Ru country 1
P2 = 3*10^6
I2 = 20
A2 = 10
S2 = P2 - I2 - A2
x2 = c(S2,I2,A2,0,0,0) # State corresponding S,I,A,R,D,Ru country 1
P3 = 2*10^6
I3 = 15
A3 = 15
S3 = P3 - I3 - A3
x3 = c(S3,I3,A3,0,0,0) # State corresponding S,I,A,R,D,Ru country 1
initial_corona = as.matrix(rbind(x1,x2,x3) )#initial conditions of 3 countries
P = c(P1, P2, P3) #population 3 countries
k = 13
theta0 = rbind(thetas_3travel[[k]][1:6],thetas_3travel[[k]][7:12], thetas_3travel[[k]][13:18] ) #choose a combo of theta
travelout_data = travelout_3dat
ratein = 1 # policy that allows full rate of travel in
traveloutDivideRegulated = totaltravelout_samerate_regulated(travelout_data, ratein, P)
inp = list(duration = nrow(travelout_data), travelregulated = traveloutDivideRegulated, initial_corona = initial_corona )
stofunc_trafficregulated(theta0,inp)
#Example2: Realizations of 15 countries
P1 = 10^7
I1 = 250
A1 = 130
S1 = P1 - I1 - A1
x1 = c(S1,I1,A1,0,0,0) # State corresponding S,I,A,R,D,Ru country 1
P2 = 3*10^6
I2 = 20
A2 = 10
S2 = P2 - I2 - A2
x2 = c(S2,I2,A2,0,0,0) # State corresponding S,I,A,R,D,Ru country 1
P3 = 2*10^6
I3 = 15
A3 = 15
S3 = P3 - I3 - A3
x3 = c(S3,I3,A3,0,0,0) # State corresponding S,I,A,R,D,Ru country 1
initial_corona1 = as.matrix(rbind(x1,x2,x3) )#initial conditions of 3 countries
P = c(P1, P2, P3) #population 3 countries
k = 13
theta01 = rbind(thetas_3travel[[k]][1:6],thetas_3travel[[k]][7:12], thetas_3travel[[k]][13:18] ) #choose a combo of theta
travelout_data1 = travelout_3dat[1:30,]
#construct blocks of initial, travel, and parameters
n = 15
n1 = n/3
P = rep(P,n/3)
initial_corona = matrix(0,n,6)
for (i in 1:n1) {
  a1 = 1+(i-1)*3
 a2 = 3+ (i-1)*3
 initial_corona[a1:a2,] = initial_corona1
}
theta0 = matrix(0,n,6)
for (i in 1:n1) {
 a1 = 1+(i-1)*3
 a2 = 3+ (i-1)*3
 theta0[a1:a2,] = theta01
}
travelout_data = matrix(0,30,n)
for (i in 1:n1) {
 a1 = 1+(i-1)*3
 a2 = 3+ (i-1)*3
 travelout_data[,a1:a2] = as.matrix(travelout_data1)
}
ratein = 1 # policy that allows full rate of travel in
traveloutDivideRegulated1 = totaltravelout_samerate_regulated(travelout_data, ratein, P)
inp = list(duration = nrow(travelout_data), travelregulated = traveloutDivideRegulated1, initial_corona = initial_corona )
stofunc_trafficregulated(theta0,inp)
}
}
